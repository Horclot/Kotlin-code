import kotlin.random.Random
import counter as counter1

var level: Double = 1.0
var heroName: String = ""
var weapon: String = ""
var weaponDamage: Int = 0
var answer: String = ""
var logics1: String = ""
var logics2: Boolean = true
var counter: Int = 0
var enchantmentMoney: Int = 0
var balance: Int = 1500
var random1:Int = 0
var kDamage:Int = 0
var boss: String = "Стражник пустыни"
var bossHp: Int = 150
var bossDamage: Int = 2
var heroHp: Int = 50
fun main() {
    println("           Добро пожаловать в игру OpenWorld!!!")
    println("       Перед началом игры следует пройти регистрацию")
    println("       Введите ваше игроваое имя")
    heroName = readln()
    println("Привет, $heroName")
    println("Введите 1 что бы увидеть ваш прогресс или нажмите любую кнопку что бы продолжить")
    answer = readln()
    if (weapon == " ") {
        weapon = "*нет оружия*"
    }
    if (answer == "1") {
        startProgress()
    }

    println("Отлично, теперь когда ваш персонаж обладает именем,\nдавайте отправимся в первый мир вашего путешествия - Лесной мир.")
    println(
        "Лесной мир:" +
                "\n     В этом мире вы окажетесь среди густого леса, наполненного таинственными существами" +
                "\n     и загадками природы. Вам предстоит выбрать одну из следующих задач, чтобы" +
                "\n     продвинуться дальше в вашем путешествии:"
    )
    println(
        "У вас тут есть 2 задачи:" +
                "\n     1. Задача сбора ресурсов" +
                "\n     2. Задача по спасению животных" +
                "\n     3. Отправиться в Пустынный мир (Необходим 2 уровень героя)"
    )
    println("Нажмите на любую кнопку для продолжения")
    readln()
    m1w1()
    m2wo1()
    println(
        message = "    Локация Лесной мир подходит к концу и мы переходим на следующую локацию... " +
                "\n         Пустынный мир:" +
                "\n  В пустынном мире ждут своего героя испытания песчаных дюн и загадок, с которыми вам придется справляться. Вам предстоит" +
                "\n выполнить список задач представленный ниже, чтобы продвинуться дальше в вашем путешествии:"
    )
    println(
        message = "       1. Заблудший караван:" +
                "\n  Вы обнаруживаете заблудившийся караван, которому требуется помощь в поиске дороги обратно к основному маршруту." +
                "\n Вам нужно определить правильное направление и провести караван к ближайшему оазису, чтобы они могли восстановить силы. " +
                "\n     2. Битва с песчаным чудовищем:" +
                "\n  На пути вам встречается огромное песчаное чудовище, стражник пустыни. Вам предстоит сразиться с ним один" +
                "\n на один" +
                "\n     3. Оазис в пустыне:" +
                "\n  Вы обнаруживаете укрытие – таинственный оазис с прохладной водой и плодовыми деревьями. Вам нужно правильно ответить на вопрос" +
                "\n стражника оазиса, чтобы он пустил вас и позволил восстановить силы." +
                "\n     4. Поиск утерянного сокровища:" +
                "\n  В легендах Пустынного мира упоминается утерянное сокровище древнего фараона. Вам предстоит разгадать древние письмена и найти" +
                "\n место, где сокровище может быть спрятано." +
                "\n     5. Сущность пустыни:" +
                "\n  Пустыня живет своей собственной жизнью, и у нее есть древний дух, который нуждается в помощи. Вы должны выполнить ряд" +
                "\n задач и испытаний, чтобы пробудить древнего духа и получить его благосклонность."
    )
    println("Приступим к первому испытанию...")
    desolateWorld()
    counter1 = 1
    while (bossHp>=0 && heroHp>=0) fight()
    if (heroHp>bossHp) println("Победа!!!")
    if (bossHp>heroHp) {
        while (answer != "Победа!!!") {
            println("Поражение...")
            println(
                "Идёт перезапуск задачи вам выдаётся 500 золотых, если хотите, можете зачаровать ваше оружие" +
                        "\nНажмите 1 для перехода в профиль или любую кнопку что бы продолжить"
            )
            balance += 500
            answer = readln()
            if (answer == "1") progress()
            bossHp = 150
            heroHp = 50
            fight()
        }
        if (heroHp>bossHp) {
            println("Победа!!!")
            answer = "Победа!!!"
        }
        println("Успешно!!!\n" +
                "Вознаграждение:" +
                "\nопыт 1.5" +
                "\n Золото - 1500" +
                "\nНайден новый предмет - Смертоносный меч короля пустыни (урон 19)")
        level += 1.5
        weapon = "Смертоносный меч короля пустыни"
        weaponDamage = 19
        balance += 1500
        progress()
        println(
            """Переходим к следующей задаче...
     3.Оазис в пустыне:
  Вы обнаруживаете укрытие – таинственный оазис с прохладной водой и плодовыми деревьями. Вам нужно правильно ответить на вопрос
 старейшены, чтобы он пустил вас и позволил  восстановить силы."""
        )
        mTextEditor()
    }

}
fun mTextEditor() {
println("Старейшена: Здраствуй путник, что бы пройти дальше тебе надо будет проявить смекалку и сыграть со мной в игру." +
        "\nПравила игры очень просты, будет 2 вопроса и тебе надо на их ответить правильно" +
        "\nЕсли готов, нажми на любую кнопку")
    readln()
    val mysteryOne = "Пирамида"
    val mysteryTwo = "Фараон"
    println("Ворос 1" +
            "\nТреугольные башни в пустыне?")
    answer = readln()
    if (answer != mysteryOne){
        println("Неверно, давай заново")
        mTextEditor()
        return
    }

    println("Ворос 2" +
            "\n\"Вождь в Египте из мира смертных\"?")
    answer = readln()
    if (answer != mysteryTwo){
        println("Неверно, давай заново")
        mTextEditor()
        return
    }
    println("Успешно!!!\n" +
            "Вознаграждение:" +
            "\nопыт 0.3" +
            "\n Золото - 500")
    level += 0.3
    balance += 500
    progress()
}
fun desolateWorld(){
    println("Открыта новая ячейка - баланс")
    println("В данный момент твой баланс равен 1500 золотых")
    println("За баланс в игре можно зачаровать оружие, тем самым показатели урона могут стать лудше или хуже. Сделать это можно на страничке профиля.")
    println("По готовности нажми любую кнопку")
    readln()
    desolateWorldTaskOne()
    println("Отлично, перейдём к следующему заданию..." +
            "\nПо готовности нажми на любую кнопку.")
    readln()
    desolateWorldTaskTwo()
}
    fun desolateWorldTaskOne() {
    println("Гуляя по местному городку в пустыне ты встретил караван, они обратились к тебе с просьбой, караван забрул сюда" +
            "\n случайно и не знает как вернуться домой, у тебя есть 2 варианта:" +
            "\n1 - Заплатить 500 золотых за карту и отдать карту каравану." +
            "\n2 - Проигнорировать просьбу, тем самым не потерять деньги.")
    println("Выбирай")
    answer = readln()
    if (answer == "1"){
        println("Караван поблагодарил тебя и взамен дал подарок от своего народа...")
        println("Успешно!!!\n" +
                "Вознаграждение:" +
                "\nопыт 0.5" +
                "\nНайден новый предмет - Пустынное копьё (Урон 7)")
        level += 0.5
        weapon = "Пустынное копьё"
        weaponDamage = 7
        balance -=500
        progress()
    }
}
    fun desolateWorldTaskTwo() {
    println("Битва с песчаным чудовищем:" +
            "\n На пути вам встречается огромное песчаное чудовище, стражник пустыни, сражайтесь с ним что бы пройти дальше.")
    println("Нажмите 1 что бы открыть подсказку и описание задачи, либо же любую клавишу что бы продолжить.")
    answer = readln()
    if (answer == "1"){
        heroFight()
    }
    println("Бой с стражником пустыни начался!!!")

}
fun heroFight(){
    println("Основная механика:")
    println("Урон наносится вашим оружием, тем самым чем больше урона от оружия, тем легче бой")
    println("В каждом бою, шанс криточеской атаки - 5%")
    println("Критическая атака - атака с бонусом в 150% от основного урона")
    println("    ")
    println("Как проводиться бой:")
    println("Бои постоянно проводяться 1 на 1, где соперники бьют друг друга по очереди, пока один не проиграет, если")
    println("вы проигрываете, вам дают утешительные 500 золотых и открывают профиль для попытки зачаровать предмет, и задание начинается заново")
}
fun fight() {
    if (bossHp<=0 && heroHp<=0) return
    println("РАУНД $counter1")
    println("Первый удар за $heroName")
    random1 = rand(1, 10)
    if (random1 == 5) {
        bossHp -= (weaponDamage + (weaponDamage * 150 / 100))
        kDamage = (weaponDamage + (weaponDamage * 150 / 100))
        println("КРИТИЧЕСКИЙ УДАААР!!!")
        println("Вы нанесли $kDamage урона противнику")
    }
    if(random1 != 5) {
        bossHp -= weaponDamage
        println("Вы нанесли $weaponDamage урона противнику")
    }

    println("Втророй удар за $boss")
    random1 = rand(1, 50)
    if (random1 == 15) {
        bossHp -= (bossDamage + (bossDamage * 150 / 100))
        println("КРИТИЧЕСКИЙ УДАААР!!!")
    }
    if(random1 != 15) {
        heroHp -= bossDamage
        println("Вам нанесли $bossDamage урона")
    }
    println("Итоги $counter1 раунда:" +
            "\nВаше здоровье - $heroHp" +
            "\nЗдоровье $boss - $bossHp")

    println("Нажмите на любую кнопку что бы продолжить")
    readln()
    counter1++
}
fun m1w1(){
    println("Задача сбора ресурсов:\n" +
            "Вам нужно собрать определенное количество дикорастущих трав и ягод, чтобы подготовить" +
            "\nсебе запасы на будущее. Каждый раз, когда вы собираете ресурс, ваш уровень опыт" +
            "\nвозрастает, и вы получаете вознаграждение за успешное выполнение задачи(+0.5 опыта).")
    level += 0.5
    println("После каждой выполненной миссии вам будет показываться ваш прогресс...")
    startProgress()
    println("переходим к следующей задаче")
}
fun m2wo1(){
    println("Задача по спасению животных:" +
            "\n     Из предсатвленного списка животных, вам потребуется выбрать тех животных, которые не навредят местным жителям," +
            "\n     спасая нужных животных вы получите больше золота, но если вы выберите больше 2 не нужных животных, задача" +
            "\n     будет выпоняться заново.")
    println("По готовности нажмите на любую кнопку")
    readln()
    println("-----------------------------------------------")
    println("Животное 1/10" +
            "\nЛунодриада" +
            "\nМагическое существо с телом женщины и головой льва, покрытое переливающейся шерстью, как лунный свет. Она является защитницей" +
            "\nлеса и его хранительницей во сне." +
            "\nВыберите вариант ответа 1-спасаем 2-нет")
    println("-----------------------------------------------")
    logics1 = readln()
    testT()
    println("-----------------------------------------------")
    println("Животное 2/10" +
            "\nСкалистый Грифон" +
            "\nМогучее существо с телом орла и львиной головой, его когти и крылья сияют яркими кристаллами. Грифоны служат проводниками духов леса." +
            "\nВыберите вариант ответа 1-спасаем 2-нет")
    println("-----------------------------------------------")
    logics1 = readln()
    testT()
    println("-----------------------------------------------")
    println("Животное 3/10" +
            "\nТеневой Ворон" +
            "\nЗагадочное существо, появляющееся только во время лунного затмения. Его перья поглощают свет, и он становится невидимым для незрячих" +
            "\nглаз."+
            "\nВыберите вариант ответа 1-спасаем 2-нет")
    println("-----------------------------------------------")
    logics1 = readln()
    testF()
    if (counter1>=3) {
        println("Вы достигли максимального количества ошибок, задача будет перезапущенна. Нажмите на любую кнопку для продолжения.")
        readln()
        counter1 = 0
        m2wo1()
        return
    }
    println("-----------------------------------------------")
    println("Животное 4/10" +
            "\nХрусталиск" +
            "\nПрозрачный зверек размером с кролика, его тело состоит из магических кристаллов, которые легко ломаются. Он служит индикатором" +
            "\nмагического равновесия в лесу." +
            "\nВыберите вариант ответа 1-спасаем 2-нет")
    println("-----------------------------------------------")
    logics1 = readln()
    testT()
    if (counter1>=3) {
        println("Вы достигли максимального количества ошибок, задача будет перезапущенна. Нажмите на любую кнопку для продолжения.")
        readln()
        counter1 = 0
        m2wo1()
        return
    }
    println("-----------------------------------------------")
    println("Животное 5/10" +
            "\nЗвездная Оленица" +
            "\nВеличественный лось с рогами, усеянными звездами. Она обладает способностью находить потерянные звезды и направлять путников по" +
            "\nночному небу." +
            "\nВыберите вариант ответа 1-спасаем 2-нет")
    println("-----------------------------------------------")
    logics1 = readln()
    testT()
    if (counter1>=3) {
        println("Вы достигли максимального количества ошибок, задача будет перезапущенна. Нажмите на любую кнопку для продолжения.")
        readln()
        counter1 = 0
        m2wo1()
        return
    }
    println("-----------------------------------------------")
    println("Животное 6/10" +
            "\nДракол" +
            "\nДревний драконоподобный зверь с кристальными чешуйками, способный управлять стихиями леса." +
            "\nВыберите вариант ответа 1-спасаем 2-нет")
    println("-----------------------------------------------")
    logics1 = readln()
    testF()
    if (counter1>=3) {
        println("Вы достигли максимального количества ошибок, задача будет перезапущенна. Нажмите на любую кнопку для продолжения.")
        readln()
        counter1 = 0
        m2wo1()
        return
    }
    println("-----------------------------------------------")
    println("Животное 7/10" +
            "\nЖивогрив" +
            "\nГрозное существо с телом льва и гривой из огненных лилий. Он служит символом вечной жизни и разнообразия в лесу." +
            "\nВыберите вариант ответа 1-спасаем 2-нет")
    println("-----------------------------------------------")
    logics1 = readln()
    testT()
    if (counter1>=3) {
        println("Вы достигли максимального количества ошибок, задача будет перезапущенна. Нажмите на любую кнопку для продолжения.")
        readln()
        counter1 = 0
        m2wo1()
        return
    }
    println("-----------------------------------------------")
    println("Животное 8/10" +
            "\nПерелисок" +
            "\nМаленький эльфийский зверек с крыльями бабочки, его яркий свет путает злых духов леса." +
            "\nВыберите вариант ответа 1-спасаем 2-нет")
    println("-----------------------------------------------")
    logics1 = readln()
    testF()
    if (counter1>=3) {
        println("Вы достигли максимального количества ошибок, задача будет перезапущенна. Нажмите на любую кнопку для продолжения.")
        readln()
        counter1 = 0
        m2wo1()
        return
    }
    println("-----------------------------------------------")
    println("Животное 9/10" +
            "\nМохоглаз" +
            "\nКрошечное существо с большими зелеными глазами, питается древесными соками и помогает распространять семена растений леса." +
            "\nВыберите вариант ответа 1-спасаем 2-нет")
    println("-----------------------------------------------")
    logics1 = readln()
    testT()
    if (counter1>=3) {
        println("Вы достигли максимального количества ошибок, задача будет перезапущенна. Нажмите на любую кнопку для продолжения.")
        readln()
        counter1 = 0
        m2wo1()
        return
    }
    println("-----------------------------------------------")
    println("Животное 10/10" +
            "\nСумрачный Лис" +
            "\nХитрый и загадочный лис с переливающейся шкурой, он обитает в тени деревьев и слушает все секреты леса." +
            "\nВыберите вариант ответа 1-спасаем 2-нет")
    println("-----------------------------------------------")
    logics1 = readln()
    testF()
    if (counter1>=3) {
        println("Вы достигли максимального количества ошибок, задача будет перезапущенна. Нажмите на любую кнопку для продолжения.")
        readln()
        counter1 = 0
        m2wo1()
        return
    }
    println("Успешно!!!\n" +
            "Вознаграждение:" +
            "\nопыт 1" +
            "\nНайден новый предмет - деревянный кинжал (Урон 3)")
    level += 1
    weapon = "Деревянный кинжал"
    weaponDamage = 3
    startProgress()
}
    fun testT(){
    if (logics1 == "1"){
        logics2 = true
    }
    if (logics1 == "2"){
        logics2 = false
    }
    if (!logics2) counter1 += 1

}
    fun testF(){
    if (logics1 == "1"){
        logics2 = false
    }
    if (logics1 == "2"){
        logics2 = true
    }
    if (!logics2) counter1 += 1
}
fun rand(start: Int, end: Int): Int {
    require(start <= end) { "Illegal Argument" }
    val rand = Random(System.nanoTime())
    return (start..end).random(rand)
}
fun progress(){
    println("-----------------------------------------------")
    println("Прогресс вашего героя:" +
            "\nИмя $heroName" +
            "\nУровень $level" +
            "\nОружие $weapon (урон $weaponDamage)" +
            "\nБаланс $balance" +
            "\nесли вы хотите зачаровать оружие, введи ЧАРОВНЯ" +
            "\nСтоимость чарования - $enchantmentMoney")
    println("-----------------------------------------------")
    answer = readln()
    if (answer == "ЧАРОВНЯ"){
        enchantmentMoney += 100
        println("Что бы зачаровать $weapon потребуется $enchantmentMoney золотых ")
        if (balance >= enchantmentMoney){
            balance -= enchantmentMoney
            random1 = rand(-1,5)
            weaponDamage += random1
            if (weaponDamage <= 0) {
                weaponDamage = 1
            }
            println("$weapon успешно зачарован на $random1, его урон состовляет - $weaponDamage")
            progress()
        }
        if (balance < enchantmentMoney){
            println("Недостаточно средств")
            println("Ваш баланс - $balance")
            return
        } else return
    }
}
fun startProgress(){
    println("-----------------------------------------------")
    println("Прогресс вашего героя:" +
            "\nИмя $heroName" +
            "\nУровень $level" +
            "\nОружие $weapon (урон $weaponDamage)")
    println("-----------------------------------------------")
}